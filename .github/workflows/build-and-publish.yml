name: Publish
concurrency:
  group: ${{ github.ref }}-publish
  cancel-in-progress: true
on:
  workflow_dispatch:

env:
  REGISTRY_BASE: ghcr.io/pushrbx
  IMAGE_NAME: amazonlinux2-python

jobs:
  build-app-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          # - linux/arm64
        python_version:
          - "3.11"
          - "3.12"
          - "3.13"
    name: Build App container image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Read metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.REGISTRY_BASE}}/${{ env.IMAGE_NAME }}"
          labels: |
            org.opencontainers.image.title=Amazonlinux 2 python ${{ matrix.python_version }}
            org.opencontainers.image.description=Just a container to help with caching python binaries for amazonlinux2
            org.opencontainers.image.source=https://github.com/pushrbx/amazonlinux2-python
            org.opencontainers.image.revision=${{ github.sha }}
          annotations: |
            org.opencontainers.image.title=Amazonlinux 2 python ${{ matrix.python_version }}
            org.opencontainers.image.description=Just a container to help with caching python binaries for amazonlinux2
            org.opencontainers.image.source=https://github.com/pushrbx/amazonlinux2-python
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: PYTHON_VERSION=${{ matrix.python_version }}
          platforms: ${{ matrix.platform }}
          # let's use github action cache storage
          cache-from: type=gha,scope=buildkit_${{ matrix.platform }}_${{ env.IMAGE_NAME }}
          cache-to: type=gha,mode=max,scope=buildkit_${{ matrix.platform }}_${{ env.IMAGE_NAME }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          outputs: type=image,name=${{ env.REGISTRY_BASE }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Transform platform value
        id: platform_transform
        run: echo "platform=$(echo '${{ matrix.platform }}' | sed 's/\//_/g')" >> $GITHUB_OUTPUT

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ steps.platform_transform.outputs.platform }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  publish-app-image:
    runs-on: ubuntu-latest
    name: Publish app container image
    needs:
      - build-app-image
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-*
          merge-multiple: true
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_BASE }}/amazonlinux2-python
          labels: |
            org.opencontainers.image.title=Amazonlinux 2 python ${{ matrix.python_version }}
            org.opencontainers.image.description=Just a container to help with caching python binaries for amazonlinux2
            org.opencontainers.image.source=https://github.com/pushrbx/amazonlinux2-python
            org.opencontainers.image.revision=${{ github.sha }}
          annotations: |
            org.opencontainers.image.title=Amazonlinux 2 python ${{ matrix.python_version }}
            org.opencontainers.image.description=Just a container to help with caching python binaries for amazonlinux2
            org.opencontainers.image.url=https://hunsubdb.moe
            org.opencontainers.image.source=https://github.com/pushrbx/amazonlinux2-python
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            type=raw,value=${{ github.ref_name }}
            type=raw,value=${{ matrix.python_version }}
            type=sha

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") $(printf '${{ env.REGISTRY_BASE }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_BASE }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
